{"version":3,"sources":["../../app-es6/services/ConnectionFactory.js"],"names":["stores","version","dbName","connection","close","ConnectionFactory","Error","Promise","resolve","reject","openRequest","window","indexedDB","open","onupgradeneeded","_createStores","e","target","result","onsuccess","bind","onerror","console","log","error","name","forEach","objectStoreNames","contains","store","deleteObjectStore","createObjectStore","autoIncrement"],"mappings":";;;;;;;;;;AAAA;;AAEC;AACA,IAAMA,SAAS,CAAC,aAAD,CAAf;AACA,IAAMC,UAAU,CAAhB;AACA,IAAMC,SAAS,YAAf;;AAEA;AACA,IAAIC,aAAa,IAAjB;;AAEA;AACA,IAAIC,QAAQ,IAAZ;;AAEA;;IACaC,iB,WAAAA,iB;AAEZ,8BAAa;AAAA;;AACZ,QAAM,IAAIC,KAAJ,CAAU,uDAAV,CAAN;AACA;;;;kCAEqB;AACrB,UAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvC,QAAIC,cAAcC,OAAOC,SAAP,CAAiBC,IAAjB,CAAsBX,MAAtB,EAA8BD,OAA9B,CAAlB;AACAS,gBAAYI,eAAZ,GAA8B,aAAK;AAClCT,uBAAkBU,aAAlB,CAAgCC,EAAEC,MAAF,CAASC,MAAzC;AACA,KAFD;;AAIAR,gBAAYS,SAAZ,GAAwB,aAAK;AAC5B,SAAG,CAAChB,UAAJ,EAAe;AACdA,mBAAaa,EAAEC,MAAF,CAASC,MAAtB;AACAd,cAAQD,WAAWC,KAAX,CAAiBgB,IAAjB,CAAsBjB,UAAtB,CAAR,CAFc,CAE4B;AAC1CA,iBAAWC,KAAX,GAAmB,YAAU;AAC5B,aAAM,IAAIE,KAAJ,CAAU,4CAAV,CAAN;AACA,OAFD;AAGA;;AAEDE,aAAQL,UAAR;AACA,KAVD;;AAYAO,gBAAYW,OAAZ,GAAsB,aAAK;AAC1BC,aAAQC,GAAR,CAAYP,EAAEC,MAAF,CAASO,KAArB;AACAf,YAAOO,EAAEC,MAAF,CAASO,KAAT,CAAeC,IAAtB;AACA,KAHD;AAIA,IAtBM,CAAP;AAuBA;;;gCAEoBtB,U,EAAW;AAC/BH,UAAO0B,OAAP,CAAe,iBAAS;AACvB,QAAGvB,WAAWwB,gBAAX,CAA4BC,QAA5B,CAAqCC,KAArC,CAAH,EACC1B,WAAW2B,iBAAX,CAA6BD,KAA7B;;AAED1B,eAAW4B,iBAAX,CAA6BF,KAA7B,EAAoC,EAACG,eAAe,IAAhB,EAApC;AACA,IALD;AAMA;;;oCAEuB;AACvB,OAAG7B,UAAH,EAAc;AACb;AACAC;AACAD,iBAAa,IAAb;AACA;AACD;;;;;AAGH","file":"ConnectionFactory.js","sourcesContent":["// var ConnectionFactory = (function (){\r\n\r\n\t//const auxilia a nao modificar as variaveis\r\n\tconst stores = ['negociacoes'];\r\n\tconst version = 4;\r\n\tconst dbName = 'aluraframe';\r\n\r\n\t// var connection = null;\r\n\tlet connection = null;\r\n\r\n\t// var close = null;\r\n\tlet close = null;\r\n\r\n\t// return class ConnectionFactory {\r\n\texport class ConnectionFactory {\r\n\r\n\t\tconstructor(){\r\n\t\t\tthrow new Error('Não é possível criar instâncias de ConnectionFactory.')\r\n\t\t}\r\n\r\n\t\tstatic getConnection(){\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tlet openRequest = window.indexedDB.open(dbName, version);\r\n\t\t\t\topenRequest.onupgradeneeded = e => {\r\n\t\t\t\t\tConnectionFactory._createStores(e.target.result);\t\t\t\t\r\n\t\t\t\t}\r\n\r\n\t\t\t\topenRequest.onsuccess = e => {\r\n\t\t\t\t\tif(!connection){\r\n\t\t\t\t\t\tconnection = e.target.result;\r\n\t\t\t\t\t\tclose = connection.close.bind(connection);//Resolve o problema interno do 'this', entao precisa fazer o bind\r\n\t\t\t\t\t\tconnection.close = function(){\r\n\t\t\t\t\t\t\tthrow new Error('Você não pode fechar diretamente a conexão');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tresolve(connection);\r\n\t\t\t\t}\r\n\r\n\t\t\t\topenRequest.onerror = e => {\r\n\t\t\t\t\tconsole.log(e.target.error);\r\n\t\t\t\t\treject(e.target.error.name);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tstatic _createStores(connection){\r\n\t\t\tstores.forEach(store => {\r\n\t\t\t\tif(connection.objectStoreNames.contains(store))\r\n\t\t\t\t\tconnection.deleteObjectStore(store);\r\n\r\n\t\t\t\tconnection.createObjectStore(store, {autoIncrement: true});\t\t\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tstatic closeConnection(){\r\n\t\t\tif(connection){\r\n\t\t\t\t// Reflect.apply(close, connection, []);Uma alternativa caso nao queira usar o bind na hora de resgatar o close com o escopo da conexao\r\n\t\t\t\tclose();\r\n\t\t\t\tconnection = null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n// })();"]}