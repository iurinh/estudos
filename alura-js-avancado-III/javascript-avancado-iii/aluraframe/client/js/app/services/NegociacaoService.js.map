{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","Negociacao","ConnectionFactory","NegociacaoDAO","NegociacaoService","_http","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","then","negociacoes","periodos","reduce","dados","periodo","concat","get","map","Date","objeto","data","quantidade","valor","catch","Error","console","log","erro","negociacao","getConnection","connection","dao","adiciona","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","negociacaoExistente","isEquals"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from './HttpService';\r\nimport {Negociacao} from '../models/Negociacao';\r\nimport {ConnectionFactory} from '../services/ConnectionFactory';\r\nimport {NegociacaoDAO} from '../dao/NegociacaoDAO';\r\n\r\nexport class NegociacaoService {\r\n\tconstructor(){\r\n\t\tthis._http = new HttpService();\r\n\t}\r\n\r\n\tobterNegociacoes(){\r\n\t\treturn Promise.all([\r\n            this.obterNegociacoesDaSemana(),\r\n            this.obterNegociacoesDaSemanaAnterior(),\r\n            this.obterNegociacoesDaSemanaRetrasada()\r\n        ])\r\n        .then(periodos => {\r\n            let negociacoes = periodos.reduce((dados, periodo) => dados.concat(periodo),[])\r\n            return negociacoes;\r\n        })\r\n\t}\r\n\r\n\tobterNegociacoesDaSemana() {\r\n\r\n        return this._http\r\n            .get('negociacoes/semana')\r\n            .then(negociacoes => {\r\n                return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n\r\n            })\r\n            .catch(erro => {\r\n                throw new Error('Não foi possível obter as negociações da semana');\r\n            })\r\n\t  }\r\n\r\n\tobterNegociacoesDaSemanaAnterior() {\r\n\r\n        return this._http\r\n            .get('negociacoes/anterior')\r\n            .then(negociacoes => {\r\n                return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n\r\n            })\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível obter as negociações da semana anterior');\r\n\t    \t})\r\n\t}\r\n\r\n\tobterNegociacoesDaSemanaRetrasada() {\r\n\r\n        return this._http\r\n            .get('negociacoes/retrasada')\r\n            .then(negociacoes => {\r\n                return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n\r\n            })\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível obter as negociações da semana retrasada');\r\n\t\t    })\r\n\t}\r\n\r\n    cadastra(negociacao){\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDAO(connection))\r\n            .then(dao => dao.adiciona(negociacao))\r\n            .then(() => 'Negoci~ção adicionada com sucesso')\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possivel adicionar a negociação')\r\n            });\r\n\r\n    }\r\n\r\n    lista(){\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDAO(connection))\r\n            .then(dao => dao.listaTodos())\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possivel obter as negociações')\r\n            });\r\n    }\r\n\r\n    apaga(){\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDAO(connection))\r\n            .then(dao => dao.apagaTodos())\r\n            .then(() => 'Negociações apagadas com sucesso')\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possivel apagar as negociações')\r\n            });\r\n    }\r\n\r\n    importa(listaAtual){\r\n        return this.obterNegociacoes()\r\n            .then(negociacoes => negociacoes.filter(negociacao => \r\n                !listaAtual.some(negociacaoExistente => \r\n                    negociacaoExistente.isEquals(negociacao)))\r\n            )\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possivel buscar negociações para importar')\r\n            });\r\n\r\n    }\r\n}"]}